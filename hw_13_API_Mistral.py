"""# –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ üìÉ
**–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞—Ç—Ç–µ—Ä–Ω–∞ "–°—Ç—Ä–∞—Ç–µ–≥–∏—è" –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Mistral API.**

## –ö—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ
–í –¥–∞–Ω–Ω–æ–º –∑–∞–¥–∞–Ω–∏–∏ –≤—ã –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–µ—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–ª–∞—Å—Å–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Mistral API, –∏—Å–ø–æ–ª—å–∑—É—è –ø–∞—Ç—Ç–µ—Ä–Ω "–°—Ç—Ä–∞—Ç–µ–≥–∏—è". –í—ã —Å–æ–∑–¥–∞–¥–∏—Ç–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –∫–ª–∞—Å—Å `RequestStrategy`, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –∑–∞–ø—Ä–æ—Å–æ–≤. –ó–∞—Ç–µ–º –≤—ã –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–ª–∞—Å—Å—ã `TextRequest` –∏ `ImageRequest` –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —ç—Ç–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏. –ù–∞–∫–æ–Ω–µ—Ü, –≤—ã –∏–∑–º–µ–Ω–∏—Ç–µ –∫–ª–∞—Å—Å `ChatFacade`, —á—Ç–æ–±—ã –æ–Ω –º–æ–≥ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –º–µ–Ω—è—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã.

### –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏: ü¶æ
- Python
- –†–∞–±–æ—Ç–∞ —Å API (HTTP-–∑–∞–ø—Ä–æ—Å—ã)
- –ü—Ä–∏–Ω—Ü–∏–ø—ã –û–û–ü
- –ü–∞—Ç—Ç–µ—Ä–Ω "–°—Ç—Ä–∞—Ç–µ–≥–∏—è"
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Git (–Ω–µ –º–µ–Ω–µ–µ 3 –∫–æ–º–º–∏—Ç–æ–≤)

## –ó–∞–¥–∞–Ω–∏–µ üë∑‚Äç‚ôÇÔ∏è

### –û–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤ –∏ –∏—Ö —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏

1. **RequestStrategy**
   - –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –∫–ª–∞—Å—Å, –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –∑–∞–ø—Ä–æ—Å–æ–≤.
   - –ú–µ—Ç–æ–¥—ã:
     - `execute(self, text: str, model: str, history: list = None, image_path: str = None) -> dict`  
       –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞. –î–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏—è—Ö.

2. **TextRequestStrategy**
   - –ö–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤.
   - –†–æ–¥–∏—Ç–µ–ª—å: `RequestStrategy`
   - –ú–µ—Ç–æ–¥—ã:
     - `execute(self, text: str, model: str, history: list = None, image_path: str = None) -> dict`  
       –†–µ–∞–ª–∏–∑—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –∫ API Mistral.

3. **ImageRequestStrategy**
   - –ö–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º.
   - –†–æ–¥–∏—Ç–µ–ª—å: `RequestStrategy`
   - –ú–µ—Ç–æ–¥—ã:
     - `execute(self, text: str, model: str, history: list = None, image_path: str = None) -> dict`  
       –†–µ–∞–ª–∏–∑—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –º—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞, –æ–±—ä–µ–¥–∏–Ω—è—é—â–µ–≥–æ —Ç–µ–∫—Å—Ç –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.

4. **ChatFacade**
   - –§–∞—Å–∞–¥ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –µ–¥–∏–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ–º —Å `RequestStrategy`.
   - –ú–µ—Ç–æ–¥—ã:
     - `__init__(self, api_key: str) -> None`  
       –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å API-–∫–ª—é—á–æ–º. –°–æ–∑–¥–∞—é—Ç—Å—è —ç–∫–∑–µ–º–ø–ª—è—Ä—ã `TextRequestStrategy` –∏ `ImageRequestStrategy`, –∞ —Ç–∞–∫–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π.
     - `change_strategy(self, strategy_type: str) -> None`  
       –ú–µ—Ç–æ–¥ –¥–ª—è —Å–º–µ–Ω—ã —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∑–∞–ø—Ä–æ—Å–∞. –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–∏–ø —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ (`text` –∏–ª–∏ `image`) –∏ –º–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é.
     - `select_model(self) -> str`  
       –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å –∏–∑ —Å–ø–∏—Å–∫–∞, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏.
     - `ask_question(self, text: str, model: str, image_path: str = None) -> dict`  
       –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞. –î–µ–ª–µ–≥–∏—Ä—É–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏.
     - `get_history(self) -> list[tuple[str, dict]]`  
       –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤.
     - `clear_history(self) -> None`  
       –û—á–∏—â–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π.

>[!info]
>### –°–ª—É–∂–µ–±–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–∞–±–æ—Ç–µ —Å API –∑–∞–ø—Ä–æ—Å–∞–º–∏
>- **–¢–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å**: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ `execute` –∏–∑ `TextRequestStrategy` –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
>- **–ú—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å**: –ü—Ä–∏ –≤—ã–±–æ—Ä–µ —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ `execute` –∏–∑ `ImageRequestStrategy`.
>- **–§–∞—Å–∞–¥**: –ö–ª–∞—Å—Å `ChatFacade` –¥–æ–ª–∂–µ–Ω –æ–±—ä–µ–¥–∏–Ω—è—Ç—å –≤—Å–µ —ç—Ç–∞–ø—ã —Ä–∞–±–æ—Ç—ã —Å API ‚Äî –≤—ã–±–æ—Ä —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏, –º–æ–¥–µ–ª–∏, –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏.

### –¢–∞–±–ª–∏—Ü–∞ –∫–ª–∞—Å—Å–æ–≤ –∏ –º–µ—Ç–æ–¥–æ–≤

| –ö–ª–∞—Å—Å                | –§–∞–π–ª          | –ú–µ—Ç–æ–¥—ã                                                           | –û–ø–∏—Å–∞–Ω–∏–µ                                                                 | –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ                          |
| -------------------- | ------------- | ---------------------------------------------------------------- | ------------------------------------------------------------------------ | -------------------------------------- |
| `RequestStrategy`    | `mistral_api.py` | `execute(text: str, model: str, history: list = None, image_path: str = None) -> dict` | –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞.                                | –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–π                |
| `TextRequestStrategy`| `mistral_api.py` | `execute(text: str, model: str, history: list = None, image_path: str = None) -> dict` | –†–µ–∞–ª–∏–∑—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –∫ API Mistral.                     | –¢–µ–∫—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã                      |
| `ImageRequestStrategy`| `mistral_api.py` | `execute(text: str, model: str, history: list = None, image_path: str = None) -> dict` | –†–µ–∞–ª–∏–∑—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –∑–∞–ø—Ä–æ—Å–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º (—Ç–µ–∫—Å—Ç + –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ Base64).| –ú—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã                |
| `ChatFacade`         | `mistral_api.py` | `__init__(self, api_key: str) -> None`                                 | –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–∏                    | –§–∞—Å–∞–¥ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è               |
|                      |               | `change_strategy(self, strategy_type: str) -> None`                    | –°–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∑–∞–ø—Ä–æ—Å–∞                                          | –í—ã–±–æ—Ä —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏                        |
|                      |               | `select_model(self) -> str`                                            | –í—ã–±–æ—Ä –ø–æ–¥—Ö–æ–¥—è—â–µ–π –º–æ–¥–µ–ª–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏                            | –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏                           |
|                      |               | `ask_question(self, text: str, model: str, image_path: str = None) -> dict` | –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å –ø–æ—Å–ª–µ–¥—É—é—â–∏–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –∏—Å—Ç–æ—Ä–∏–∏                         | –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ |
|                      |               | `get_history(self) -> list[tuple[str, dict]]`                          | –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤                                  | –ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏                       |
|                      |               | `clear_history(self) -> None`                                          | –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤                                         | –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–µ–π                    |

## –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É–∫–∞–∑–∞–Ω–∏—è

1. **–ê–Ω–Ω–æ—Ç–∞—Ü–∏–∏ —Ç–∏–ø–æ–≤ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:**
   - –í–æ –≤—Å–µ—Ö –∫–ª–∞—Å—Å–∞—Ö –∏ –º–µ—Ç–æ–¥–∞—Ö –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ —Ç–∏–ø–æ–≤.
   - –î–æ–±–∞–≤—å—Ç–µ –ø–æ–¥—Ä–æ–±–Ω—ã–µ docstring –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–µ—Ç–æ–¥–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π.

2. **–†–∞–±–æ—Ç–∞ —Å Git:**
   - –ü—Ä–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–µ–ª–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 3 –∫–æ–º–º–∏—Ç–æ–≤, –≥–¥–µ –∫–∞–∂–¥—ã–π –∫–æ–º–º–∏—Ç –æ—Ç—Ä–∞–∂–∞–µ—Ç –ª–æ–≥–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–π —ç—Ç–∞–ø —Ä–∞–±–æ—Ç—ã:
     - –ü–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç ‚Äì —Å–æ–∑–¥–∞–Ω–∏–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π.
     - –í—Ç–æ—Ä–æ–π –∫–æ–º–º–∏—Ç ‚Äì —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤.
     - –¢—Ä–µ—Ç–∏–π –∫–æ–º–º–∏—Ç ‚Äì –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ñ–∞—Å–∞–¥–∞ –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –º–µ—Ç–æ–¥–æ–≤ –∏—Å—Ç–æ—Ä–∏–∏.

3. **–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:**
   –ü—Ä–∏–º–µ—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–æ–∑–¥–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π –º–æ–∂–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:
   ```python
   if __name__ == "__main__":
       api_key = "your_api_key_here"
       chat = ChatFacade(api_key)
       
       # –°–º–µ–Ω–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
       chat.change_strategy("text")
       
       # –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏
       model = chat.select_model()
       
       # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
       —Ç–µ–∫—Å—Ç_–≤–æ–ø—Ä–æ—Å–∞ = "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç—è—Ö –≤ IT."
       response = chat.ask_question(—Ç–µ–∫—Å—Ç_–≤–æ–ø—Ä–æ—Å–∞, model)
       
       print("–û—Ç–≤–µ—Ç –æ—Ç API:", response)
       
       # –°–º–µ–Ω–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –Ω–∞ –º—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω—É—é
       chat.change_strategy("image")
       
       # –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏
       model = chat.select_model()
       
       # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
       image_path = "path/to/image.jpg"
       response = chat.ask_question(—Ç–µ–∫—Å—Ç_–≤–æ–ø—Ä–æ—Å–∞, model, image_path)
       
       print("–û—Ç–≤–µ—Ç –æ—Ç API:", response)
       
       # –ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
       print("–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤:", chat.get_history())
   ```
   –î–∞–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö —à–∞–≥–æ–≤: —Å–º–µ–Ω—É —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏, –≤—ã–±–æ—Ä –º–æ–¥–µ–ª–∏, –æ—Ç–ø—Ä–∞–≤–∫—É –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –≤—ã–≤–æ–¥ –∏—Å—Ç–æ—Ä–∏–∏.

"""

from settings import MISTRAL_API_KEY
from typing import List, Dict, Tuple, Optional, Any
from mistralai import Mistral
import base64
from abc import ABC, abstractmethod


class RequestStrategy(ABC):
    '''
    –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –∑–∞–ø—Ä–æ—Å–æ–≤.
    '''

    def  __init__(self, api_key: str):
        '''
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Å API-–∫–ª—é—á–æ–º.
        
        Args:
            api_key: –ö–ª—é—á API Mistral –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
        '''
        self.client = Mistral(api_key=api_key)

    @abstractmethod
    def execute(self, text: str, model: str, history: List[Tuple[str, Dict[str, Any]]] = None, image_path: str = None) -> Dict[str, Any]:
        """
        –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞.

        Args:
            text: –¢–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞
            model: –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
            history: –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            image_path: –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                
        Returns:
            dict: –°–ª–æ–≤–∞—Ä—å —Å –æ—Ç–≤–µ—Ç–æ–º –∏–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ—à–∏–±–∫–µ
        """
        pass

            
class TextRequestStrategy(ABC):
    """
    –ö–ª–∞—Å—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API Mistral.
    Args:
        text: –¢–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –º–æ–¥–µ–ª–∏
        model: –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ Mistral –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
    
    Returns:
        dict: –°–ª–æ–≤–∞—Ä—å —Å –∫–ª—é—á–æ–º 'response', —Å–æ–¥–µ—Ä–∂–∞—â–∏–º –æ—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏,
              –∏–ª–∏ —Å –∫–ª—é—á–æ–º 'error', —Å–æ–¥–µ—Ä–∂–∞—â–∏–º —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
    """
    def __init__(self, api_key: str):
       self.client = Mistral(api_key=api_key)

    def send(self, text:str, model: str) -> dict:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å.
        """
        try:
            response = self.client.chat.complete(
                model = model,
                messages = [
                    {
                        "role": "user",
                        "content": text,
                    },
                ]
            )
            
            return {"response": response.choices[0].message.content}
        except Exception as e:
            return {"error": str(e)}
        
        
class ImageRequest:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∫ API Mistral.
    """
    def __init__(self, api_key: str):
        self.client = Mistral(api_key=api_key)

    def encode_image(self, image_path: str) -> Optional[str]:
        """–ö–æ–¥–∏—Ä—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ base64.
        Args:
            image_path: –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
        Returns:
            Optional[str]: –°—Ç—Ä–æ–∫–∞ —Å –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –≤ base64 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∏–ª–∏ None –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        """
        try:
            with open(image_path, "rb") as image_file:
                return base64.b64encode(image_file.read()).decode('utf-8')
        except Exception as e:
            print(f"Error: {e}")
            return None
        
    def send(self, text: str, image_path: str, model: str) -> dict:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
        Args:
            text: –¢–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞
            image_path: –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
            model: –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
        
        Returns:
        dict: –°–ª–æ–≤–∞—Ä—å —Å –æ—Ç–≤–µ—Ç–æ–º –∏–ª–∏ –æ—à–∏–±–∫–æ–π
        """
        if not image_path:
            return {"error": "–ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –Ω–µ —É–∫–∞–∑–∞–Ω"}
       
        
        base64_image = self.encode_image(image_path)
        if not base64_image:
            return {"error": "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"}
        
        try:
            messages = [{
                "role": "user",
                "content": [
                    {"type": "text", "text": text},
                    {"type": "image_url", "image_url": f"data:image/jpeg;base64,{base64_image}"}
                ]
            }]

            response = self.client.chat.complete(
                model=model,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–¥–µ–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
                messages=messages
            )
            return {"response": response.choices[0].message.content}
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
            return {"error": str(e)}
        

class ChatFacade:
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∞—Å–∞–¥–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API Mistral.
    """
    def __init__(self, api_key: str) -> None:
        self.text_request = TextRequest(api_key)
        self.image_request = ImageRequest(api_key)
        self.history: List[Tuple[str, dict]] = []
        self.text_models = ["mistral-large-latest"]
        self.image_model = ["pixtral-12b-2409", "pixtral-12b-2409-v2"]

    def select_mode(self) ->int:
        """–í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã —Å API.
        –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –º–æ–¥–µ–ª—å –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞, –æ–Ω–∞ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
        –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–æ–¥–µ–ª–µ–π, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –≤—ã–±—Ä–∞—Ç—å –æ–¥–Ω—É –∏–∑ –Ω–∏—Ö.
        
        Args:
            mode: –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã (1 - —Ç–µ–∫—Å—Ç–æ–≤—ã–π, 2 - —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º)
        
        Returns:
            str: –ù–∞–∑–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏
        """
        print("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:")
        print("1. –¢–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å")
        print("2. –ó–∞–ø—Ä–æ—Å —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º")

        while True:
            print ("–û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞...")
            user_input = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ä–µ–∂–∏–º–∞: ")
            print (f'–í—ã –≤–≤–µ–ª–∏: {user_input}')

            if user_input == "1":
                return 1
            elif user_input == "2":
                return 2
            else:
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2.")
            

    def select_model(self, mode: int) -> str:
        """–í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞."""
        models = self.text_models if mode == 1 else self.image_model

        if len(models) == 1:
            print(f"–í—ã–±—Ä–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å: {models[0]}")
            return models[0]
        
        print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:")
        for i, model in enumerate(models, 1):
            print(f"{i}. {model}")
        
        while True:
            try:
                choice = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –º–æ–¥–µ–ª–∏: "))
                if 1 <= choice <= len(models):
                    selected_model = models[choice - 1]
                    print(f"–í—ã–±—Ä–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å: {selected_model}")
                    return selected_model
                else:
                    print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä –º–æ–¥–µ–ª–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –º–æ–¥–µ–ª–∏ –∏–∑ —Å–ø–∏—Å–∫–∞.")
            except ValueError:
                    print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –º–æ–¥–µ–ª–∏ –∏–∑ —Å–ø–∏—Å–∫–∞.")

    def load_image(self, image_path: str) -> str:
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –µ–≥–æ –≤ Base64.
    
        Args:
            image_path: –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
            
        Returns:
            str: –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é, –µ—Å–ª–∏ –æ–Ω–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
            
        Raises:
            FileNotFoundError: –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω
            Exception: –ü—Ä–∏ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–∫–∞—Ö –∑–∞–≥—Ä—É–∑–∫–∏
        """
        try:
        # –ü—Ä–æ–±—É–µ–º –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –µ–≥–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è
            with open(image_path, "rb") as _:
                pass

            base64_image = self.image_request.encode_image(image_path)
            if base64_image is None:
                raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ Base64")

            return image_path
        except FileNotFoundError:
            raise FileNotFoundError(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {image_path}")
        except Exception as e:
            raise Exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {str(e)}")
    

    def ask_question(self, text: str, model: str, image_path: str = None) -> dict:
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏.
        –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ –∏ –Ω–∞–ª–∏—á–∏—è –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é,
        –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª–∏–±–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å, –ª–∏–±–æ –∑–∞–ø—Ä–æ—Å —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º.
        
        Args:
            text: –¢–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞
            model: –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
            image_path: –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, —Ç–æ–ª—å–∫–æ –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º)
        
        Returns:
            dict: –°–ª–æ–≤–∞—Ä—å —Å –∫–ª—é—á–æ–º 'response', —Å–æ–¥–µ—Ä–∂–∞—â–∏–º –æ—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏,
                –∏–ª–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ—à–∏–±–∫–µ
        """
        try:
            if model in self.image_model and image_path is not None:
              
                response = self.image_request.send(text, image_path, model)
                print("–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —Ä–µ–∂–∏–º–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
            else:
                print("–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞...")
                response = self.text_request.send(text, model)
                print("–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ")

            if isinstance(response, dict) and "response" in response:
                self.history.append((text, response))
                self.save_history_to_file()
                return response
            else:
                return {"response": str(response)}
                
        except Exception as e:
            error_response = {"error": f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {str(e)}"}
            self.history.append((text, error_response))
            self.save_history_to_file() 
            return {"response": f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {str(e)}"}
        
    
    def get_history(self) -> List[Tuple[str, dict]]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤."""
        return self.history
    
    def clear_history(self) -> None:
        """–û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤."""
        self.history.clear()

    def save_history_to_file(self, filename="history.txt"):
        with open(filename, "w", encoding="utf-8") as f:
            for question, response in self.history:
                f.write(f"–ó–∞–ø—Ä–æ—Å: {question}\n")
                f.write(f"–û—Ç–≤–µ—Ç: {response.get('response', response.get('error'))}\n\n")


def main():
    chat = ChatFacade(MISTRAL_API_KEY)

    while True:
        mode = chat.select_mode()
        model = chat.select_model(mode)
        image_path = None

        if mode == 2:
            text = "–û–ø–∏—à–∏ –¥–µ—Ç–∞–ª—å–Ω–æ, —á—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ"
            print("\n–ü—Ä–∏–º–µ—Ä –ø—É—Ç–∏: C:/Users/Pictures/image.jpg")
            image_path = input("–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é: ")
            print(f"–ü—É—Ç—å –ø–æ–ª—É—á–µ–Ω: {image_path}")

            try:
                image_path = chat.load_image(image_path)
                print(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {image_path}")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
                continue
        else:
            text = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å: ")

        result = chat.ask_question(text, model, image_path)
        print("\n–û—Ç–≤–µ—Ç:", result.get("response", result.get("error")))

        choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (c - –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, h - –ø–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é, q - –≤—ã–π—Ç–∏): ").lower()
        
        if choice == 'h':
            # –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é
            print("\n–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤:")
            for question, response in chat.get_history():
                print(f"\n–ó–∞–ø—Ä–æ—Å: {question}")
                print(f"–û—Ç–≤–µ—Ç: {response.get('response', response.get('error', '–û—à–∏–±–∫–∞'))}")
            
            # –ü–æ—Å–ª–µ –ø–æ–∫–∞–∑–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º, —Ö–æ—á–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å
            if input("\n–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): ").lower() != "y":
                break
        elif choice == 'q':
            break


if __name__ == "__main__":
    main()

__all__ = ['TextRequest', 'ImageRequest', 'ChatFa—Åade']



